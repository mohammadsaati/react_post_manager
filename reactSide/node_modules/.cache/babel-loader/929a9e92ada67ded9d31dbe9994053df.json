{"ast":null,"code":"import _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\react_cms\\\\clinet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react_cms\\\\clinet\\\\src\\\\context\\\\alert\\\\AlertState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../type';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const _useReducer = useReducer(AlertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Set alert\n\n\n  const setAlert = (msg, type) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), 3000);\n  };\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react_cms\\clinet\\src\\context\\alert\\AlertState.js"],"names":["React","useReducer","uuid","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","id","v4","payload","setTimeout","alerts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,UAAjB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,EAAoBC,YAApB,QAAuC,SAAvC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG,EAArB;;AADwB,sBAGGR,UAAU,CAACG,YAAD,EAAgBK,YAAhB,CAHb;AAAA;AAAA,QAGjBC,KAHiB;AAAA,QAGTC,QAHS,oBAKxB;;;AACA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAOC,IAAP,KAAgB;AAC7B,UAAMC,EAAE,GAAGb,IAAI,CAACc,EAAL,EAAX;AACAL,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGT,SADF;AAELY,MAAAA,OAAO,EAAG;AAACJ,QAAAA,GAAD;AAAOC,QAAAA;AAAP;AAFL,KAAD,CAAR;AAKAI,IAAAA,UAAU,CAAC,MAAMP,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAGR,YAAR;AAAuBW,MAAAA,OAAO,EAAGF;AAAjC,KAAD,CAAf,EAAwD,IAAxD,CAAV;AACH,GARD;;AASA,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAI;AAC5BI,MAAAA,MAAM,EAAGT,KADmB;AAE5BE,MAAAA;AAF4B,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKJ,KAAK,CAACY,QAJX,CADJ;AAQH,CAvBD;;AAyBA,eAAeb,UAAf","sourcesContent":["import React , { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport {SET_ALERT , REMOVE_ALERT} from '../type';\r\n\r\nconst AlertState = props => {\r\n    const initialState = [];\r\n\r\n    const [state , dispatch] = useReducer(AlertReducer , initialState);\r\n\r\n    //Set alert\r\n    const setAlert = (msg , type) => {\r\n        const id = uuid.v4();\r\n        dispatch({\r\n            type : SET_ALERT , \r\n            payload : {msg , type }\r\n        });\r\n\r\n        setTimeout(() => dispatch({type : REMOVE_ALERT , payload : id}) , 3000);\r\n    }\r\n    return (\r\n        <AlertContext.Provider value = {{\r\n            alerts : state , \r\n            setAlert\r\n        }}>\r\n            {props.children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertState\r\n"]},"metadata":{},"sourceType":"module"}