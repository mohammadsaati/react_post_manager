{"ast":null,"code":"import _defineProperty from \"C:\\\\xampp\\\\htdocs\\\\react_cms\\\\clinet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\react_cms\\\\clinet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react_cms\\\\clinet\\\\src\\\\components\\\\layout\\\\EditPostForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Categories from '../Categories';\n\nconst EditPostForm = () => {\n  const _useState = useState(JSON.parse(localStorage.getItem('currentPost'))),\n        _useState2 = _slicedToArray(_useState, 2),\n        oldpost = _useState2[0],\n        setOldPost = _useState2[1];\n\n  const _useState3 = useState({\n    update_title: oldpost.post_title,\n    update_discription: oldpost.post_discription,\n    update_cat_id: oldpost.post_cat_id,\n    update_status: oldpost.post_status\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        updatedPost = _useState4[0],\n        setUpdatedPost = _useState4[1];\n\n  const update_title = updatedPost.update_title,\n        update_discription = updatedPost.update_discription,\n        update_status = updatedPost.update_status,\n        update_cat_id = updatedPost.update_cat_id;\n\n  const onChange = e => {\n    setUpdatedPost(_objectSpread({}, updatedPost, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onClick = e => {\n    if (e.target.classList.contains('my_items')) {\n      const itemValue = e.target.parentNode.value;\n      const getIdArray = itemValue.split('_');\n      const getId = getIdArray[0]; //Set category id\n\n      update_cat_id === getId;\n    }\n  };\n\n  const onUpdatePost = e => {\n    e.preventDefault();\n    console.log(updatedPost);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card mt-4\",\n    style: {\n      padding: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onUpdatePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Post title : \"), React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    className: \"form-control\",\n    name: \"update_title\",\n    value: update_title,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"discription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Post discription : \"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    style: {\n      height: '200px'\n    },\n    value: update_discription,\n    onChange: onChange,\n    required: true,\n    name: \"update_discription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Categories, {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"status\",\n    name: \"update_status\",\n    value: \"visible\",\n    onChange: onChange,\n    className: \"form-chech-input\",\n    checked: update_status == 'visible',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\xA0visible\")), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"status\",\n    name: \"update_status\",\n    value: \"invisible\",\n    onChange: onChange,\n    className: \"form-chech-input\",\n    checked: update_status == 'invisible',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\xA0invisible\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Save post\",\n    className: \"btn btn-outline-warning\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n};\n\nexport default EditPostForm;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react_cms\\clinet\\src\\components\\layout\\EditPostForm.js"],"names":["React","useState","Categories","EditPostForm","JSON","parse","localStorage","getItem","oldpost","setOldPost","update_title","post_title","update_discription","post_discription","update_cat_id","post_cat_id","update_status","post_status","updatedPost","setUpdatedPost","onChange","e","target","name","value","onClick","classList","contains","itemValue","parentNode","getIdArray","split","getId","onUpdatePost","preventDefault","console","log","padding","height","width"],"mappings":"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","sourcesContent":["import React , { useState } from 'react';\r\nimport Categories from '../Categories';\r\n\r\n\r\nconst EditPostForm = () => {\r\n    \r\n    const [oldpost , setOldPost] = useState(JSON.parse(localStorage.getItem('currentPost')));\r\n\r\n    const [updatedPost , setUpdatedPost] = useState({\r\n        update_title : oldpost.post_title,\r\n        update_discription : oldpost.post_discription , \r\n        update_cat_id : oldpost.post_cat_id,\r\n        update_status : oldpost.post_status\r\n    });\r\n\r\n    const { update_title , update_discription , update_status , update_cat_id } = updatedPost;\r\n    \r\n    const onChange = e => {setUpdatedPost({...updatedPost,[e.target.name]:e.target.value})};\r\n\r\n    const onClick = e => {\r\n        if(e.target.classList.contains('my_items')) {\r\n            const itemValue = e.target.parentNode.value;\r\n            \r\n            const getIdArray = itemValue.split('_');\r\n            const getId = getIdArray[0];\r\n            \r\n            //Set category id\r\n            update_cat_id === getId;\r\n        }\r\n    }\r\n\r\n    const onUpdatePost = (e) => {\r\n        e.preventDefault();\r\n        console.log(updatedPost);\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className=\"card mt-4\" style={{padding:'20px'}}>\r\n            <form onSubmit={onUpdatePost}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Post title : </label>\r\n                    <input type=\"text\" required className=\"form-control\" name=\"update_title\" value={update_title} onChange={ onChange } />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"discription\">Post discription : </label>\r\n                    <textarea className=\"form-control\" style={{height:'200px'}} value={ update_discription } onChange={ onChange } required name=\"update_discription\"></textarea>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    \r\n                    <Categories onClick={onClick} />\r\n                </div>\r\n                <br/>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input type=\"radio\" id=\"status\" name=\"update_status\" value='visible' \r\n                    onChange={onChange} className=\"form-chech-input\" checked={update_status == 'visible'} />\r\n                    <label htmlFor=\"status\" className=\"form-check-label\">&nbsp;visible</label>\r\n                  \r\n                </div>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <div className=\"form-check form-check-inline\">\r\n                     <input type=\"radio\" id=\"status\" name=\"update_status\" value='invisible'\r\n                     onChange={onChange} className=\"form-chech-input\" checked={ update_status == 'invisible' } />\r\n                    <label htmlFor=\"status\" className=\"form-check-label\">&nbsp;invisible</label>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n\r\n                <input type=\"submit\" value=\"Save post\" className=\"btn btn-outline-warning\" style={{width:'100%'}} />\r\n            \r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPostForm\r\n"]},"metadata":{},"sourceType":"module"}