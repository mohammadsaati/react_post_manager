{"ast":null,"code":"import _defineProperty from \"C:\\\\xampp\\\\htdocs\\\\react_cms\\\\clinet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\react_cms\\\\clinet\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react_cms\\\\clinet\\\\src\\\\components\\\\layout\\\\EditPostForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nconst EditPostForm = ({\n  oldPost\n}) => {\n  const post_id = oldPost.post_id,\n        post_cat_id = oldPost.post_cat_id,\n        post_title = oldPost.post_title,\n        post_discription = oldPost.post_discription,\n        post_status = oldPost.post_status;\n\n  const _useState = useState({\n    'post_id': post_id,\n    'post_cat_id': post_cat_id,\n    'post_title': post_title,\n    'post_discription': post_discription,\n    'post_status': post_status\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        updatePost = _useState2[0],\n        setUpdatePost = _useState2[1];\n\n  const onChange = e => setUpdatePost(_objectSpread({}, updatePost, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onUpdatePost = e => {\n    e.preventDefault();\n    console.log(updatePost);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card mt-4\",\n    style: {\n      padding: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onUpdatePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Post title : \"), React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    className: \"form-control\",\n    name: \"post_title\",\n    value: post_title,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"discription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Post discription : \"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    style: {\n      height: '200px'\n    },\n    value: post_discription,\n    onChange: onChange,\n    required: true,\n    name: \"discription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"dv\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"status\",\n    name: \"status\",\n    value: \"visible\",\n    onChange: onChange,\n    className: \"form-chech-input\",\n    checked: post_status == 'visible',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"status\",\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"\\xA0visible\")), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"status\",\n    name: \"status\",\n    value: \"invisible\",\n    onChange: onChange,\n    className: \"form-chech-input\",\n    checked: post_status == 'invisible',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"status\",\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"\\xA0invisible\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Save post\",\n    className: \"btn btn-outline-warning\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n};\n\nexport default EditPostForm;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react_cms\\clinet\\src\\components\\layout\\EditPostForm.js"],"names":["React","useState","EditPostForm","oldPost","post_id","post_cat_id","post_title","post_discription","post_status","updatePost","setUpdatePost","onChange","e","target","name","value","onUpdatePost","preventDefault","console","log","padding","height","width"],"mappings":"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","sourcesContent":["import React , { useState } from 'react';\r\n\r\nconst EditPostForm = ({oldPost}) => {\r\n    \r\n    const { post_id , post_cat_id , post_title , post_discription , post_status } = oldPost;\r\n\r\n    const [updatePost , setUpdatePost] = useState({\r\n        'post_id' : post_id,\r\n        'post_cat_id' : post_cat_id , \r\n        'post_title' : post_title , \r\n        'post_discription' : post_discription ,\r\n        'post_status' : post_status\r\n    });\r\n\r\n    const onChange = e => setUpdatePost({...updatePost , [e.target.name]:e.target.value});\r\n\r\n    const onUpdatePost = (e) => {\r\n        e.preventDefault();\r\n        console.log(updatePost);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mt-4\" style={{padding:'20px'}}>\r\n            <form onSubmit={onUpdatePost}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label for=\"title\">Post title : </label>\r\n                    <input type=\"text\" required className=\"form-control\" name=\"post_title\" value={ post_title } onChange={onChange} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label for=\"discription\">Post discription : </label>\r\n                    <textarea className=\"form-control\" style={{height:'200px'}} value={ post_discription } onChange={ onChange } required name=\"discription\"></textarea>\r\n                </div>\r\n\r\n                <dv className=\"form-group\">\r\n                    \r\n                    {/* <Categories onClick={onClick} /> */}\r\n                </dv>\r\n                <br/>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input type=\"radio\" id=\"status\" name=\"status\" value='visible' \r\n                    onChange={onChange} className=\"form-chech-input\" checked={post_status == 'visible'} />\r\n                    <label for=\"status\" className=\"form-check-label\">&nbsp;visible</label>\r\n                  \r\n                </div>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <div className=\"form-check form-check-inline\">\r\n                     <input type=\"radio\" id=\"status\" name=\"status\" value='invisible'\r\n                     onChange={onChange} className=\"form-chech-input\" checked={ post_status == 'invisible' } />\r\n                    <label for=\"status\" className=\"form-check-label\">&nbsp;invisible</label>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n\r\n                <input type=\"submit\" value=\"Save post\" className=\"btn btn-outline-warning\" style={{width:'100%'}} />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPostForm\r\n"]},"metadata":{},"sourceType":"module"}